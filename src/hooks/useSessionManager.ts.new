// 重构后的 useSessionManager - 使用组合模式结合新的细粒度 hooks
import { useEffect } from "react";
import { useActiveSession } from "./session/useActiveSession";
import { useAuthNavigation } from "./auth/useAuthNavigation";

/**
 * 重构后的 useSessionManager
 * 现在作为组合器，使用多个细粒度的 hooks
 * 保持向后兼容的API
 */
export const useSessionManager = () => {
  const {
    sessionId,
    setSessionId,
    isLoading,
    isAuthenticated,
    retryCreateSession,
    hasFailedToCreateSession,
  } = useActiveSession();

  const { redirectToLoginIfUnauthenticated } = useAuthNavigation();

  // Handle unauthenticated users - redirect to login
  useEffect(() => {
    redirectToLoginIfUnauthenticated();
  }, [redirectToLoginIfUnauthenticated]);

  return {
    sessionId,
    setSessionId,
    isLoading,
    isAuthenticated,
    retryCreateSession,
    hasFailedToCreateSession,
  };
};
